#!/usr/bin/php
<?php

$is_wpcli_installed = exec( 'which wp' );

if( !$is_wpcli_installed )
{
	echo <<<EOF
WP-CLI is not installed. This must be installed before you can use this program. See https://github.com/wp-cli/wp-cli#readme for more details.
Terminating...

EOF;
	exit(1);
}

$arguments = array(
	'url' => 'http://localhost/##QT##',
	'path' => '~/Sites/##QT##',
	'name' => '##QTNAME##',
	'slug' => 'qt###',
);

$specified_args = array();

if( $argc > 1 )
{
	array_shift( $argv );
	$list = $help = false;
	while( $argv )
	{
		$current_variable = array_shift( $argv );
		if( $current_variable === '=' )
		{
			$current_variable = array_shift( $argv );
		}
		if( !$current_variable )
		{
			continue;
		}
		if( preg_match( '@^--?h(elp)?$@', $current_variable ) )
		{
			$help = true;
			break;
		}
		elseif( preg_match( '@^--?l(ist)?$@', $current_variable ) )
		{
			$list = true;
			break;
		}
		if( !preg_match( '@^--?([^=]+)(=.+)?$@', $current_variable, $matches ) )
		{
			continue;
		}
		$variable_name = $matches[1];
		if( !isset( $arguments[$variable_name] ) )
		{
			continue;
		}
		if( !empty( $matches[2] ) )
		{
			$value = substr( $matches[2], 1 );
			$value = trim( $value, '\'" ' );
		}
		else
		{
			$value = array_shift( $argv );
			if( $value === '=' )
			{
				$value = array_shift( $argv );
			}
		}
		if( trim( $value ) )
		{
			$arguments[$variable_name] = $specified_args[$variable_name] = trim( $value );
		}
	}
	if( $help )
	{
		echo <<<EOF

quick-wp [options]

--help    This help menu
    -h

--path    The filesystem path in which to install WordPress
          Paths do not need to be absolute, and also supports
          a tilde (~) to signify the current user's home.

--url     The url from which this WordPress installation will
          be accessible.

--name    The site name of the new site.

--slug    May be used to customize both path and url partially.
          If provided, the slug will be used to name the folder
          used (~/Sites/<slug>) as well as the URL
          (http://localhost/<slug>). A sequence of three pound
          signs (###) will be replaced by the site's id number.
          The default slug is 'qt###'.

EOF;
		exit(0);
	}
	unset( $variable_name, $value, $current_variable, $matches );
}

$mysql = mysql_connect( 'localhost', 'test', 'test' );

if( !$mysql )
{
	echo <<<EOF
Could not connect to database server!
Terminating...

EOF;
	exit(1);
}

$database_exists = mysql_select_db( 'test', $mysql );

if( !$database_exists )
{
	echo <<<EOF
Could not select database!
Terminating...

EOF;
	exit(1);
}

$tables = mysql_query( "SHOW TABLES LIKE 'quicktestSites';", $mysql );

if( mysql_num_rows( $tables ) === 0 )
{
	$create = "CREATE TABLE `quicktestSites` (
		`id` bigint(10) unsigned NOT NULL AUTO_INCREMENT,
		`url` varchar(100) NOT NULL DEFAULT '',
		`path` varchar(100) NOT NULL DEFAULT '',
		`name` varchar(100) NOT NULL DEFAULT '',
		`status` varchar(40) NOT NULL DEFAULT '',
		PRIMARY KEY (`id`)
	) ENGINE=MyISAM DEFAULT CHARSET=utf8";
	mysql_query( $create, $mysql );
}

if( $list )
{
	$raw_sites = mysql_query( "SELECT * FROM `quicktestSites`;", $mysql );
	$sites = $columns = array();
	if( mysql_num_rows( $raw_sites ) === 0 )
	{
		echo <<<EOF
There are no sites!

EOF;
	}
	else
	{
		while( $site = mysql_fetch_object( $raw_sites ) )
		{
			$sites[] = $site;
			$fields = get_object_vars( $site );
			foreach( $fields as $field => $val )
			{
				if( empty( $columns[$field] ) )
					$columns[$field] = 1;
				$columns[$field] = max( $columns[$field], strlen( (string)$val ) );
			}
			foreach( array_keys( $columns ) as $col )
				$columns[$col] = max( $columns[$col], strlen( $col ) );
		}
		$width = array_sum( $columns ) + 1 + ( 3 * count( $columns ) );
		echo str_repeat( '_', $width );
		echo "\n";
		$line_format = '|';
		foreach( $columns as $col )
			$line_format .= ' %-' . $col . 's |';
		echo call_user_func_array('sprintf', array_merge( array( $line_format ), array_keys( $columns ) ) ) . "\n";
		echo str_repeat( '—', $width ) . "\n";
		$line_format = '|';
		foreach( $columns as $col => $col_width )
			$line_format .= ' %-' . $col_width . ($col == 'id' ? 'd' : 's') . ' |';
		foreach( $sites as $site )
		{
			echo call_user_func_array( 'sprintf', array_merge( array( $line_format ), array_values( get_object_vars( $site ) ) ) ) . "\n";
		}
		echo str_repeat( '—', $width ) . "\n";
	}
	exit(0);
}

$query = "SELECT * FROM `quicktestSites` WHERE status = 'pending' ORDER BY id ASC LIMIT 1;";
$pending_site = mysql_query( $query, $mysql );

if( mysql_num_rows( $pending_site ) === 1 )
{
	$site = mysql_fetch_assoc( $pending_site );
	extract( $site );
	$quicktestID = $id;
	if( !empty( $specified_args ) )
		extract( $specified_args );
}
else
{
	$query = "INSERT INTO `quicktestSites` (status) VALUES('pending');";
	$worked = mysql_query( $query, $mysql );

	if( !$worked )
	{
		echo "Something went wrong...\nAborting...\n";
		exit(1);
	}

	$quicktestID = mysql_insert_id( $mysql );
	$quicktestSlug = str_replace( '###', $quicktestID, $arguments['slug'] );
	$quicktestName = "Quick Test $quicktestID";
	foreach( $arguments as &$argument )
	{
		$argument = str_replace( array( '##QT##', '##QTNAME##' ), array( $quicktestSlug, $quicktestName ), $argument );
		$argument = mysql_real_escape_string( $argument, $mysql );
	}
	unset( $argument );

	extract( $arguments );

	if( 0 !== strpos( $path, '/' ) )
	{
		if( 0 === strpos( $path, '~' ) )
		{
			$home = exec( 'echo $HOME' );
			$path = $home . substr( $path, 1 );
		}
		else
		{
			$path = getcwd() . "/$path";
		}
	}

	$query = "UPDATE `quicktestSites` SET url='$url', path='$path', name='$name' WHERE id = $quicktestID;";
	mysql_query( $query, $mysql );
}

if( !is_dir( $path ) )
{
	echo <<<EOF
Creating directory... 
EOF;
	umask( 0022 );
	$ok = mkdir( $path, 0777, true );
	if( !$ok )
	{
		echo <<<EOF

Could not create directory '$path'. Try running the following command before trying again:

    mkdir -p $path

Terminating...

EOF;
		exit(1);
	}
	echo "ok.\n";
}

chdir( $path );

if( !is_dir( 'wp-admin' ) )
{
	echo <<<EOF
Downloading WordPress... 
EOF;
	exec( 'wp core download --silent' );
	if( !is_dir( 'wp-admin' ) )
	{
		echo <<<EOF

Download failed. Error message:

	$downloaded

EOF;
		exit(1);
	}
	echo "ok.\n";
}

if( is_file( 'wp-config.php' ) )
{
	@unlink( 'wp-config.php' );
}

echo <<<EOF
Configuring WordPress... 
EOF;

$command = "wp core config --name=\"test\" --user=\"test\" --pass=\"test\" --prefix=\"qt{$quicktestID}_\"";
exec( $command, $output );
$output = implode( "\n", $output );

$success = strpos( $output, 'WordPress can now communicate with your database' );

if( $success === false )
{
	echo <<<EOF

Configuration failed.
Terminating.

EOF;
	exit(1);
}

echo "ok.\n";

$query = "SHOW TABLES LIKE 'qt{$quicktestID}_%';";
$old_tables = mysql_query( $query, $mysql );
if( mysql_num_rows( $old_tables ) !== 0 )
{
	$query = "DROP TABLE";
	while( $table = mysql_fetch_array( $old_tables, MYSQL_NUM ) )
	{
		$query .= " `{$table[0]}`,";
	}
	$query = substr( $query, 0, -1 ) . ';';
	mysql_query( $query, $mysql );
}

echo <<<EOF
Installing WordPress... 
EOF;

$command = "wp core install --site_url=\"$url\" --site_title=\"$name\" --admin_email=\"test@example.com\" --admin_password=\"asdf\"";
$success = exec( $command );
if( false === strpos( $success, 'WordPress installed successfully' ) )
{
	echo <<<EOF

Installation failed. Error message:

	$success

EOF;
	exit(1);
}
echo "ok.\n";

$query = "UPDATE `quicktestSites` SET status = 'installed' WHERE id = $quicktestID;";
$worked = mysql_query( $query, $mysql );

echo <<<EOF
WordPress was successfully set up! Accessing it in your browser at $url now...

EOF;

exec( "open $url" );

exit(0);

